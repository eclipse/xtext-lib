/*
 * Configuration of Java compiler, Javadoc, additional archives, and additional dependency configurations.
 */

sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
	options.encoding = 'ISO-8859-1'
}

tasks.withType(Test) {
	systemProperty 'file.encoding', 'ISO-8859-1'
}

tasks.withType(Javadoc) {
	options.encoding = 'ISO-8859-1'
	options.tags = [ 'noreference', 'noextend', 'noimplement', 'noinstantiate', 'nooverride', 'model', 'generated', 'ordered' ] 
	options.addStringOption('Xdoclint:none', '-quiet')
	failOnError = false
}

task sourcesJar(type: Jar, dependsOn: classes) {
	group 'Build'
	description 'Assembles a jar archive containing the sources.'
	classifier = 'sources'
	from sourceSets.main.allSource
	from ('.') {
		include 'schema/**', 'model/**'
	}
}
artifacts.archives sourcesJar

task javadocJar(type: Jar, dependsOn: javadoc) {
	group 'Build'
	description 'Assembles a jar archive containing the JavaDoc output.'
	classifier = 'javadoc'
	from javadoc.destinationDir
}

if (findProperty('ignoreTestFailures') == 'true') {
	tasks.withType(Test) {
		ignoreFailures = true
	}
}
